body {
    height: 100%;
    background-image: url("temp_pics/galaxy.webp");

}

#mapid {
    height: 300px;
    widows: 300px;
    border-radius: 50%;
}
.vertical-center {
    min-height: 100%;  /* Fallback for browsers do NOT support vh unit */
    min-height: 100vh; /* These two lines are counted as one :-)       */
  
    display: flex;
    align-items: center;
}

img{
    height: 300px;
    width: 300px;
}

/* STAR WARS */
#mapcontainer{
    width: 100%;
    height: 100%;
    /* Hide elements that flow outside the viewable space */
    overflow: hidden;
    /* Black background for the screen */
    background: #000;
}
.star-wars {
    /* Flexbox to center the entire element on the screen */
    display: flex;
    justify-content: center;
    /* This is a magic number based on the context in which this snippet is used and effects the perspective */
    height: 800px;
    /* This sets allows us to transform the text on a 3D plane, and is somewhat a magic number */
    perspective: 400px;
    /* The rest is totally up to personal styling preferences */
    color: #feda4a;
    font-family: 'Pathway Gothic One', sans-serif;
    font-size: 500%;
    font-weight: 600;
    letter-spacing: 6px;
    line-height: 150%;
    text-align: justify;
  }
  .crawl {
    /* Position the element so we can adjust the top property in the animation */
    position: relative;
    /* Making sure the text is fully off the screen at the start and end of the animation */
    top: -100px;
    /* Defines the skew origin at the very center when we apply transforms on the animation */
    transform-origin: 50% 100%;
  }
  @keyframes crawl {
    0% {
      /* The element starts below the screen */
      top: 0;
      /* Rotate the text 20 degrees but keep it close to the viewer */
      transform: rotateX(20deg) translateZ(0);
    }
    100% { 
      /* This is a magic number, but using a big one to make sure the text is fully off the screen at the end */
      top: -6000px;
      /* Slightly increasing the rotation at the end and moving the text far away from the viewer */
      transform: rotateX(25deg) translateZ(-2500px);
    }
  }
  .crawl {
    /* Position the element so we can adjust the top property in the animation */
    position: relative;
    /* Defines the skew origin at the very center when we apply transforms on the animation */
    transform-origin: 50% 100%;
    /* Adds the crawl animation, which plays for one minute */
    animation: crawl 60s linear;
  }
  .fade {
    position: relative;
    width: 100%;
    min-height: 60vh;
    top: -25px;
    background-image: linear-gradient(0deg, transparent, black 75%);
    z-index: 1;
  }